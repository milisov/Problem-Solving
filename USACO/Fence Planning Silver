#include <bits/stdc++.h>

using namespace std;
vector<int>adj[100001];
int n,m;
int visited[100001]= {0};
long long int x[100001],y[100001];
long long int maxx=0;
long long int minx=1e10;
long long int miny=1e10;
long long int maxy=0;
void dfs(int s)
{
    visited[s]=1;
    maxx=max(maxx,x[s-1]);
    minx=min(minx,x[s-1]);
    maxy=max(maxy,y[s-1]);
    miny=min(miny,y[s-1]);
    for(int i=0; i<adj[s].size(); i++)
    {
        int t=adj[s][i];
        if(visited[t]==0)
        {
            dfs(t);
        }
    }
}
int main()
{
    freopen("fenceplan.in","r",stdin);
    freopen("fenceplan.out","w",stdout);
    //cout<<maxy<<endl;
    cin>>n>>m;
    for(int i=0; i<n; i++)
    {
        cin>>x[i]>>y[i];
    }
    int a[m],b[m];
    for(int i=0; i<m; i++)
    {
        cin>>a[i]>>b[i];
        adj[a[i]].push_back(b[i]);
        adj[b[i]].push_back(a[i]);
    }
    long long int ans=1e10;
    for(int i=1; i<=n; i++)
    {
        maxx=0;
        minx=1e10;
        miny=1e10;
        maxy=0;
        if(visited[i]==0)
        {
            //cout<<i<<endl;
            dfs(i);
            long long int rez=2*(maxx-minx)+2*(maxy-miny);
            //cout<<maxx<<" "<<minx<<endl;
            //cout<<maxy<<" "<<miny<<endl;
            ans=min(ans,rez);
        }
    }
    cout<<ans<<endl;
}
