#include <bits/stdc++.h>

using namespace std;
#define pb push_back
#define mp make_pair
#define f first
#define s second

vector<pair<int,char> >adj[100005];
bool vis[100005];
bool color[100005];
int bad=0;
void dfs(int s,bool c=0)
{
    vis[s]=true;
    color[s]=c;
    for(int i=0; i<adj[s].size(); i++)
    {
        int t=adj[s][i].f;
        char cc=adj[s][i].s;
        //cout<<cc<<endl;
        if(vis[t]==true)
        {
            if(cc=='S')
            {
                if(color[t]!=color[s])
                {
                    bad=1;
                }
            }
            if(cc=='D')
            {
                if(color[t]==color[s])
                {
                    bad=1;
                }
            }
        }
        else
        {
            if(cc=='S')
            {
                dfs(t,c);
            }
            else
            {
                dfs(t,!c);
            }
        }
    }
}
int main()
{
   freopen("revegetate.in","r",stdin);
   freopen("revegetate.out","w",stdout);

    int n,m;
    cin>>n>>m;
    char d[m];
    int a[m],b[m];
    for(int i=0; i<m; i++)
    {
        cin>>d[i]>>a[i]>>b[i];
        adj[a[i]].pb(mp(b[i],d[i]));
        adj[b[i]].pb(mp(a[i],d[i]));
    }
    long long int comp=0;
    for(int i=1; i<=n; i++)
    {
        if(vis[i]==false)
        {
            comp++;
            dfs(i);
        }
    }
    //cout<<comp<<endl;
    if(bad==1)
    {
        cout<<0<<endl;
    }
    else
    {
        cout<<1;
        for(int i=0; i<comp; i++)
        {
            cout<<0;
        }
    }
}
