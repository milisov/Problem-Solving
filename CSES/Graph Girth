#include<bits/stdc++.h>

using namespace std;
int n,m;
vector<int>adj[2505];
const int inf = 1000000007;
int cycle_len(int s)
{
    int ans=inf;
    int dist[n+1]={0};
    bool vis[2505];
    memset(vis,false,sizeof(vis));
    queue<int>q;
    q.push(s);
    vis[s]=true;
    dist[s]=0;
    while(!q.empty())
    {
        int node=q.front();
        //cout<<node<<endl;
        q.pop();
        for(int i=0;i<adj[node].size();i++)
        {
            int t=adj[node][i];
            if(vis[t]==0)
            {
                vis[t]=true;
                dist[t]=dist[node]+1;
                q.push(t);
            }else
            {
                if (dist[t] >= dist[node]) {
                ans=min(ans,dist[t]+dist[node]+1);
                }
            }
        }
    }
    return ans;
}
int main()
{
    cin>>n>>m;
    int a[m],b[m];
    for(int i=0;i<m;i++)
    {
        cin>>a[i]>>b[i];
        adj[a[i]].push_back(b[i]);
        adj[b[i]].push_back(a[i]);
    }
    int sum=inf;
    for(int i=1;i<=n;i++)
    {
        //cout<<cycle_len(i)<<endl;
        sum=min(sum,cycle_len(i));
    }
    if(sum==inf)
    {
        cout<<-1<<endl;
    }else
    {
    cout<<sum<<endl;
    }
}
